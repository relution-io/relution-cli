"use strict";
var html = require('common-tags').html;
var Connectors = (function () {
    function Connectors() {
        this.parentFolder = 'routes';
        this.publishName = 'connectors.ts';
        this.name = 'connectors';
    }
    Object.defineProperty(Connectors.prototype, "template", {
        get: function () {
            return ((_a = ["\n      /**\n       * @file routes/connectors.js\n       * ", " Backend\n       */\n\n      // Relution APIs\n      const connector = require('relution/connector.js');\n      /**\n       * module providing direct access to connectors.\n       *\n       * Used by Relution SDK connectors module for direct access to backend servers. If you do not want\n       * or need this functionality, the routes defined herein can be removed.\n       *\n       * @param app express.js application to hook into.\n       */\n      export function init(app: any) {\n        app.post('/api/v1/connectors/:connection',\n          /**\n           * installs session data such as credentials.\n           *\n           * @param req containing body JSON to pass as input.\n           * @param res result of call is provided as JSON body data.\n           * @param next function to invoke error handling.\n           */\n          function serviceCall(req: any, res: any, next: any) {\n            connector.configureSession(req.params.connection, req.body);\n            res.send(204); // success --> 204 no content\n          }\n        );\n\n        app.post('/api/v1/connectors/:connection/:call',\n          /**\n           * calls directly into a service connection.\n           *\n           * @param req containing body JSON to pass as input.\n           * @param res result of call is provided as JSON body data.\n           * @param next function to invoke error handling.\n           */\n          function serviceCall(req: any, res: any, next: any) {\n            connector.runCall(req.params.connection, req.params.call, req.body).then(res.json.bind(res), next).done();\n          }\n        );\n      }\n    "], _a.raw = ["\n      /**\n       * @file routes/connectors.js\n       * ", " Backend\n       */\n\n      // Relution APIs\n      const connector = require('relution/connector.js');\n      /**\n       * module providing direct access to connectors.\n       *\n       * Used by Relution SDK connectors module for direct access to backend servers. If you do not want\n       * or need this functionality, the routes defined herein can be removed.\n       *\n       * @param app express.js application to hook into.\n       */\n      export function init(app: any) {\n        app.post('/api/v1/connectors/:connection',\n          /**\n           * installs session data such as credentials.\n           *\n           * @param req containing body JSON to pass as input.\n           * @param res result of call is provided as JSON body data.\n           * @param next function to invoke error handling.\n           */\n          function serviceCall(req: any, res: any, next: any) {\n            connector.configureSession(req.params.connection, req.body);\n            res.send(204); // success --> 204 no content\n          }\n        );\n\n        app.post('/api/v1/connectors/:connection/:call',\n          /**\n           * calls directly into a service connection.\n           *\n           * @param req containing body JSON to pass as input.\n           * @param res result of call is provided as JSON body data.\n           * @param next function to invoke error handling.\n           */\n          function serviceCall(req: any, res: any, next: any) {\n            connector.runCall(req.params.connection, req.params.call, req.body).then(res.json.bind(res), next).done();\n          }\n        );\n      }\n    "], html(_a, this.name)) + '\n');
            var _a;
        },
        enumerable: true,
        configurable: true
    });
    return Connectors;
}());
exports.Connectors = Connectors;
//# sourceMappingURL=Connectors.js.map